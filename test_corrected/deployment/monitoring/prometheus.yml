# Prometheus Configuration for Integration System
# Comprehensive monitoring setup with service discovery and alerting

global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s
  external_labels:
    cluster: 'integration-system'
    environment: 'production'
    region: 'us-west-2'

# Rule files for alerting
rule_files:
  - "/etc/prometheus/rules/*.yml"
  - "/etc/prometheus/rules/alerts/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      scheme: http
      timeout: 10s
      api_version: v2
      path_prefix: /

# Remote write configuration for long-term storage
remote_write:
  - url: "https://prometheus-remote-write.example.com/api/v1/write"
    queue_config:
      capacity: 10000
      max_samples_per_send: 1000
      batch_send_deadline: 5s
      min_shards: 1
      max_shards: 200
    metadata_config:
      send: true
      send_interval: 30s
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*'
        action: drop

# Scrape configurations
scrape_configs:
  # ============================================================================
  # Prometheus Self-Monitoring
  # ============================================================================
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    
  # ============================================================================
  # Kubernetes API Server
  # ============================================================================
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - default
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: false
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https
    - target_label: __address__
      replacement: kubernetes.default.svc:443

  # ============================================================================
  # Kubernetes Nodes
  # ============================================================================
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
    - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics

  # ============================================================================
  # Kubernetes Node Exporter
  # ============================================================================
  - job_name: 'kubernetes-nodes-cadvisor'
    kubernetes_sd_configs:
    - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
    metric_relabel_configs:
    - source_labels: [__name__]
      regex: 'container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)'
      action: drop

  # ============================================================================
  # Application Services (with Service Discovery)
  # ============================================================================
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - production
        - staging
        - monitoring
    relabel_configs:
    # Only scrape pods with prometheus.io/scrape annotation
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    
    # Use custom metrics path if specified
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    
    # Use custom port if specified
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    
    # Add pod labels as metric labels
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    
    # Add namespace as label
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    
    # Add pod name as label
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name
    
    # Add container name as label
    - source_labels: [__meta_kubernetes_pod_container_name]
      action: replace
      target_label: kubernetes_container_name

  # ============================================================================
  # Specific Application Services
  # ============================================================================
  - job_name: 'api-gateway'
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names: [production, staging]
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_label_component]
      action: keep
      regex: api-gateway
    - source_labels: [__meta_kubernetes_service_label_app]
      action: keep
      regex: integration-system
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: environment
    scrape_interval: 10s
    metrics_path: /api/v1/metrics

  - job_name: 'auth-service'
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names: [production, staging]
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_label_component]
      action: keep
      regex: auth-service
    - source_labels: [__meta_kubernetes_service_label_app]
      action: keep
      regex: integration-system
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: environment
    scrape_interval: 10s
    metrics_path: /api/v1/auth/metrics

  - job_name: 'user-service'
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names: [production, staging]
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_label_component]
      action: keep
      regex: user-service
    - source_labels: [__meta_kubernetes_service_label_app]
      action: keep
      regex: integration-system
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: environment
    scrape_interval: 10s
    metrics_path: /api/v1/users/metrics

  # ============================================================================
  # Infrastructure Components
  # ============================================================================
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    relabel_configs:
    - source_labels: [__address__]
      target_label: instance
      regex: '(.+):.+'
      replacement: '${1}'
    - target_label: service
      replacement: 'postgresql'

  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    relabel_configs:
    - source_labels: [__address__]
      target_label: instance
      regex: '(.+):.+'
      replacement: '${1}'
    - target_label: service
      replacement: 'redis'

  - job_name: 'elasticsearch-exporter'
    static_configs:
      - targets: ['elasticsearch-exporter:9114']
    scrape_interval: 30s
    relabel_configs:
    - source_labels: [__address__]
      target_label: instance
      regex: '(.+):.+'
      replacement: '${1}'
    - target_label: service
      replacement: 'elasticsearch'

  # ============================================================================
  # NGINX Ingress Controller
  # ============================================================================
  - job_name: 'nginx-ingress'
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names: [ingress-nginx]
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
      action: keep
      regex: ingress-nginx
    - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
      action: keep
      regex: controller
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    scrape_interval: 10s

  # ============================================================================
  # External Services Monitoring
  # ============================================================================
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://api.example.com/api/v1/health
        - https://api-staging.example.com/api/v1/health
        - https://www.example.com
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: blackbox-exporter:9115
    scrape_interval: 30s
    scrape_timeout: 15s

  - job_name: 'blackbox-dns'
    metrics_path: /probe
    params:
      module: [dns_soa]
    static_configs:
      - targets:
        - example.com
        - api.example.com
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: blackbox-exporter:9115
    scrape_interval: 60s

  # ============================================================================
  # Custom Application Metrics
  # ============================================================================
  - job_name: 'custom-metrics'
    honor_labels: true
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names: [production, staging]
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_custom_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_custom_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_custom_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    scrape_interval: 30s

# Recording rules for performance optimization
recording_rules:
  - name: integration_system.rules
    interval: 30s
    rules:
      - record: instance:node_cpu_utilisation:rate5m
        expr: 1 - avg without (cpu, mode) (rate(node_cpu_seconds_total{mode="idle"}[5m]))
      
      - record: instance:node_memory_utilisation:ratio
        expr: 1 - ((node_memory_MemAvailable_bytes or (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes)
      
      - record: integration_system:request_rate:5m
        expr: sum(rate(http_requests_total[5m])) by (service, method, status)
      
      - record: integration_system:request_duration:95percentile:5m
        expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (service, le))
      
      - record: integration_system:error_rate:5m
        expr: sum(rate(http_requests_total{status=~"5.."}[5m])) by (service) / sum(rate(http_requests_total[5m])) by (service)